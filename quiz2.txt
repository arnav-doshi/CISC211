section	.text
	global _start       
_start:                     
	mov eax, [a] ; load value a into eax
	mov ebx, [b] ; load value b into ebx
	mov ecx, [c] ; load value c into ecx
	mov edx, [d] ; load value d into edx
	
	imul eax, ebx ; multiply (a x b) and store result in eax
	imul ecx, edx ; multiply (c x d) and store result in eco
	add eax, ecx  ; add the two parentheses and store result in eax
	
	mov [result], eax ; store result in result
	
	mov eax, 1 ; syscall exit
	mov ebx, 0 
	mov ecx, 0
	mov edx, 0
	
	int 0x80 ; exit
	

section	.data
    a dd 7  ; initialize a to 7
    b dd 8  ; initialize b to 8
    c dd 9  ; initialize c to 9
    d dd 10 ; initialize d to 10

section .bss
    result resd 1 ; store space for result ('x') in leftside of equation
    

; result of this program should be 146